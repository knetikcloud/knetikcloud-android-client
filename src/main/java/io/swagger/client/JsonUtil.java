/**
 * Knetik Platform API Documentation Latest
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: Latest
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Type;
import java.util.List;
import java.util.Date;
import io.swagger.client.model.*;

public class JsonUtil {
  public static GsonBuilder gsonBuilder;

  static {
    gsonBuilder = new GsonBuilder();
    gsonBuilder.serializeNulls();
    gsonBuilder.setDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
    gsonBuilder.registerTypeAdapter(Date.class, new JsonDeserializer<Date>() {
      public Date deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
        return new Date(json.getAsJsonPrimitive().getAsLong());
      }
    });
  }

  public static Gson getGson() {
    return gsonBuilder.create();
  }

  public static String serialize(Object obj){
    return getGson().toJson(obj);
  }

  public static <T> T deserializeToList(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getListTypeForDeserialization(cls));
  }

  public static <T> T deserializeToObject(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getTypeForDeserialization(cls));
  }

  public static Type getListTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("AchievementDefinitionResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<AchievementDefinitionResource>>(){}.getType();
    }
    
    if ("AchievementProgressUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<AchievementProgressUpdateRequest>>(){}.getType();
    }
    
    if ("ActionResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<ActionResource>>(){}.getType();
    }
    
    if ("ActionVariableResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<ActionVariableResource>>(){}.getType();
    }
    
    if ("ActivityEntitlementResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<ActivityEntitlementResource>>(){}.getType();
    }
    
    if ("ActivityOccurrenceCreationFailure".equalsIgnoreCase(className)) {
      return new TypeToken<List<ActivityOccurrenceCreationFailure>>(){}.getType();
    }
    
    if ("ActivityOccurrenceJoinResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ActivityOccurrenceJoinResult>>(){}.getType();
    }
    
    if ("ActivityOccurrenceResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<ActivityOccurrenceResource>>(){}.getType();
    }
    
    if ("ActivityOccurrenceResults".equalsIgnoreCase(className)) {
      return new TypeToken<List<ActivityOccurrenceResults>>(){}.getType();
    }
    
    if ("ActivityResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<ActivityResource>>(){}.getType();
    }
    
    if ("ActivityUserResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<ActivityUserResource>>(){}.getType();
    }
    
    if ("AddressResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<AddressResource>>(){}.getType();
    }
    
    if ("Affiliate".equalsIgnoreCase(className)) {
      return new TypeToken<List<Affiliate>>(){}.getType();
    }
    
    if ("AggregateCountResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<AggregateCountResource>>(){}.getType();
    }
    
    if ("AggregateInvoiceReportResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<AggregateInvoiceReportResource>>(){}.getType();
    }
    
    if ("AmazonS3Activity".equalsIgnoreCase(className)) {
      return new TypeToken<List<AmazonS3Activity>>(){}.getType();
    }
    
    if ("AnswerResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<AnswerResource>>(){}.getType();
    }
    
    if ("ApplyPaymentRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<ApplyPaymentRequest>>(){}.getType();
    }
    
    if ("ArticleResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<ArticleResource>>(){}.getType();
    }
    
    if ("Artist".equalsIgnoreCase(className)) {
      return new TypeToken<List<Artist>>(){}.getType();
    }
    
    if ("ArtistResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<ArtistResource>>(){}.getType();
    }
    
    if ("AvailableSettingResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<AvailableSettingResource>>(){}.getType();
    }
    
    if ("BareActivityResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<BareActivityResource>>(){}.getType();
    }
    
    if ("BareChallengeActivityResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<BareChallengeActivityResource>>(){}.getType();
    }
    
    if ("Batch".equalsIgnoreCase(className)) {
      return new TypeToken<List<Batch>>(){}.getType();
    }
    
    if ("BatchRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<BatchRequest>>(){}.getType();
    }
    
    if ("BatchReturn".equalsIgnoreCase(className)) {
      return new TypeToken<List<BatchReturn>>(){}.getType();
    }
    
    if ("Behavior".equalsIgnoreCase(className)) {
      return new TypeToken<List<Behavior>>(){}.getType();
    }
    
    if ("BillingReport".equalsIgnoreCase(className)) {
      return new TypeToken<List<BillingReport>>(){}.getType();
    }
    
    if ("BooleanResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<BooleanResource>>(){}.getType();
    }
    
    if ("BreCategoryResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<BreCategoryResource>>(){}.getType();
    }
    
    if ("BreEvent".equalsIgnoreCase(className)) {
      return new TypeToken<List<BreEvent>>(){}.getType();
    }
    
    if ("BreEventLog".equalsIgnoreCase(className)) {
      return new TypeToken<List<BreEventLog>>(){}.getType();
    }
    
    if ("BreGlobalResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<BreGlobalResource>>(){}.getType();
    }
    
    if ("BreGlobalScopeDefinition".equalsIgnoreCase(className)) {
      return new TypeToken<List<BreGlobalScopeDefinition>>(){}.getType();
    }
    
    if ("BreRule".equalsIgnoreCase(className)) {
      return new TypeToken<List<BreRule>>(){}.getType();
    }
    
    if ("BreRuleLog".equalsIgnoreCase(className)) {
      return new TypeToken<List<BreRuleLog>>(){}.getType();
    }
    
    if ("BreTriggerParameterDefinition".equalsIgnoreCase(className)) {
      return new TypeToken<List<BreTriggerParameterDefinition>>(){}.getType();
    }
    
    if ("BreTriggerResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<BreTriggerResource>>(){}.getType();
    }
    
    if ("BundleItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<BundleItem>>(){}.getType();
    }
    
    if ("BundledSku".equalsIgnoreCase(className)) {
      return new TypeToken<List<BundledSku>>(){}.getType();
    }
    
    if ("CampaignResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<CampaignResource>>(){}.getType();
    }
    
    if ("Cart".equalsIgnoreCase(className)) {
      return new TypeToken<List<Cart>>(){}.getType();
    }
    
    if ("CartItemRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartItemRequest>>(){}.getType();
    }
    
    if ("CartLineItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartLineItem>>(){}.getType();
    }
    
    if ("CartShippableResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartShippableResponse>>(){}.getType();
    }
    
    if ("CartShippingAddressRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartShippingAddressRequest>>(){}.getType();
    }
    
    if ("CartShippingOption".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartShippingOption>>(){}.getType();
    }
    
    if ("CartSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartSummary>>(){}.getType();
    }
    
    if ("CatalogSale".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogSale>>(){}.getType();
    }
    
    if ("CategoryResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<CategoryResource>>(){}.getType();
    }
    
    if ("ChallengeActivityResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<ChallengeActivityResource>>(){}.getType();
    }
    
    if ("ChallengeEventParticipantResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<ChallengeEventParticipantResource>>(){}.getType();
    }
    
    if ("ChallengeEventResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<ChallengeEventResource>>(){}.getType();
    }
    
    if ("ChallengeResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<ChallengeResource>>(){}.getType();
    }
    
    if ("CityResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<CityResource>>(){}.getType();
    }
    
    if ("ClientResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<ClientResource>>(){}.getType();
    }
    
    if ("CollectionCountry".equalsIgnoreCase(className)) {
      return new TypeToken<List<CollectionCountry>>(){}.getType();
    }
    
    if ("CollectionVideoContribution".equalsIgnoreCase(className)) {
      return new TypeToken<List<CollectionVideoContribution>>(){}.getType();
    }
    
    if ("Collectionstring".equalsIgnoreCase(className)) {
      return new TypeToken<List<Collectionstring>>(){}.getType();
    }
    
    if ("CommentResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<CommentResource>>(){}.getType();
    }
    
    if ("CommentSearch".equalsIgnoreCase(className)) {
      return new TypeToken<List<CommentSearch>>(){}.getType();
    }
    
    if ("Config".equalsIgnoreCase(className)) {
      return new TypeToken<List<Config>>(){}.getType();
    }
    
    if ("ContributionResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<ContributionResource>>(){}.getType();
    }
    
    if ("Country".equalsIgnoreCase(className)) {
      return new TypeToken<List<Country>>(){}.getType();
    }
    
    if ("CountryResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<CountryResource>>(){}.getType();
    }
    
    if ("CountryTaxResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<CountryTaxResource>>(){}.getType();
    }
    
    if ("CouponDefinition".equalsIgnoreCase(className)) {
      return new TypeToken<List<CouponDefinition>>(){}.getType();
    }
    
    if ("CouponItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<CouponItem>>(){}.getType();
    }
    
    if ("CreateBillingAgreementRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateBillingAgreementRequest>>(){}.getType();
    }
    
    if ("CreatePayPalPaymentRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreatePayPalPaymentRequest>>(){}.getType();
    }
    
    if ("Currency".equalsIgnoreCase(className)) {
      return new TypeToken<List<Currency>>(){}.getType();
    }
    
    if ("CurrencyResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<CurrencyResource>>(){}.getType();
    }
    
    if ("CustomerConfig".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerConfig>>(){}.getType();
    }
    
    if ("CustomerResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerResource>>(){}.getType();
    }
    
    if ("DatabaseConfig".equalsIgnoreCase(className)) {
      return new TypeToken<List<DatabaseConfig>>(){}.getType();
    }
    
    if ("DeltaResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeltaResource>>(){}.getType();
    }
    
    if ("DeviceResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeviceResource>>(){}.getType();
    }
    
    if ("Discount".equalsIgnoreCase(className)) {
      return new TypeToken<List<Discount>>(){}.getType();
    }
    
    if ("DispositionCount".equalsIgnoreCase(className)) {
      return new TypeToken<List<DispositionCount>>(){}.getType();
    }
    
    if ("DispositionResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<DispositionResource>>(){}.getType();
    }
    
    if ("EntitlementItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<EntitlementItem>>(){}.getType();
    }
    
    if ("Expressionobject".equalsIgnoreCase(className)) {
      return new TypeToken<List<Expressionobject>>(){}.getType();
    }
    
    if ("FinalizeBillingAgreementRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<FinalizeBillingAgreementRequest>>(){}.getType();
    }
    
    if ("FinalizePayPalPaymentRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<FinalizePayPalPaymentRequest>>(){}.getType();
    }
    
    if ("FlagReportResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<FlagReportResource>>(){}.getType();
    }
    
    if ("FlagResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<FlagResource>>(){}.getType();
    }
    
    if ("ForwardLog".equalsIgnoreCase(className)) {
      return new TypeToken<List<ForwardLog>>(){}.getType();
    }
    
    if ("FulfillmentType".equalsIgnoreCase(className)) {
      return new TypeToken<List<FulfillmentType>>(){}.getType();
    }
    
    if ("GooglePaymentRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GooglePaymentRequest>>(){}.getType();
    }
    
    if ("GrantTypeResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<GrantTypeResource>>(){}.getType();
    }
    
    if ("Group".equalsIgnoreCase(className)) {
      return new TypeToken<List<Group>>(){}.getType();
    }
    
    if ("GroupMember".equalsIgnoreCase(className)) {
      return new TypeToken<List<GroupMember>>(){}.getType();
    }
    
    if ("GroupMemberResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<GroupMemberResource>>(){}.getType();
    }
    
    if ("GroupResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<GroupResource>>(){}.getType();
    }
    
    if ("ImportJobOutputResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<ImportJobOutputResource>>(){}.getType();
    }
    
    if ("ImportJobResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<ImportJobResource>>(){}.getType();
    }
    
    if ("InventorySubscriptionResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<InventorySubscriptionResource>>(){}.getType();
    }
    
    if ("InvoiceCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<InvoiceCreateRequest>>(){}.getType();
    }
    
    if ("InvoiceItemResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<InvoiceItemResource>>(){}.getType();
    }
    
    if ("InvoiceLogEntry".equalsIgnoreCase(className)) {
      return new TypeToken<List<InvoiceLogEntry>>(){}.getType();
    }
    
    if ("InvoicePaymentStatusRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<InvoicePaymentStatusRequest>>(){}.getType();
    }
    
    if ("InvoiceResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<InvoiceResource>>(){}.getType();
    }
    
    if ("ItemBehaviorDefinitionResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<ItemBehaviorDefinitionResource>>(){}.getType();
    }
    
    if ("ItemTemplateResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<ItemTemplateResource>>(){}.getType();
    }
    
    if ("KeyValuePairstringstring".equalsIgnoreCase(className)) {
      return new TypeToken<List<KeyValuePairstringstring>>(){}.getType();
    }
    
    if ("Language".equalsIgnoreCase(className)) {
      return new TypeToken<List<Language>>(){}.getType();
    }
    
    if ("LeaderboardEntryResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<LeaderboardEntryResource>>(){}.getType();
    }
    
    if ("LeaderboardResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<LeaderboardResource>>(){}.getType();
    }
    
    if ("LevelingResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<LevelingResource>>(){}.getType();
    }
    
    if ("Localizer".equalsIgnoreCase(className)) {
      return new TypeToken<List<Localizer>>(){}.getType();
    }
    
    if ("LocationLogResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<LocationLogResource>>(){}.getType();
    }
    
    if ("LookupTypeResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<LookupTypeResource>>(){}.getType();
    }
    
    if ("Maintenance".equalsIgnoreCase(className)) {
      return new TypeToken<List<Maintenance>>(){}.getType();
    }
    
    if ("Mapstringobject".equalsIgnoreCase(className)) {
      return new TypeToken<List<Mapstringobject>>(){}.getType();
    }
    
    if ("MetricResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<MetricResource>>(){}.getType();
    }
    
    if ("MongoDatabaseConfig".equalsIgnoreCase(className)) {
      return new TypeToken<List<MongoDatabaseConfig>>(){}.getType();
    }
    
    if ("NestedCategory".equalsIgnoreCase(className)) {
      return new TypeToken<List<NestedCategory>>(){}.getType();
    }
    
    if ("NewPasswordRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<NewPasswordRequest>>(){}.getType();
    }
    
    if ("OauthAccessTokenResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<OauthAccessTokenResource>>(){}.getType();
    }
    
    if ("Operator".equalsIgnoreCase(className)) {
      return new TypeToken<List<Operator>>(){}.getType();
    }
    
    if ("OptimalPaymentRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<OptimalPaymentRequest>>(){}.getType();
    }
    
    if ("PageAchievementDefinitionResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageAchievementDefinitionResource>>(){}.getType();
    }
    
    if ("PageAggregateCountResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageAggregateCountResource>>(){}.getType();
    }
    
    if ("PageAggregateInvoiceReportResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageAggregateInvoiceReportResource>>(){}.getType();
    }
    
    if ("PageArticleResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageArticleResource>>(){}.getType();
    }
    
    if ("PageArtistResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageArtistResource>>(){}.getType();
    }
    
    if ("PageBareActivityResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageBareActivityResource>>(){}.getType();
    }
    
    if ("PageBareChallengeActivityResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageBareChallengeActivityResource>>(){}.getType();
    }
    
    if ("PageBillingReport".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageBillingReport>>(){}.getType();
    }
    
    if ("PageBreCategoryResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageBreCategoryResource>>(){}.getType();
    }
    
    if ("PageBreEventLog".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageBreEventLog>>(){}.getType();
    }
    
    if ("PageBreGlobalResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageBreGlobalResource>>(){}.getType();
    }
    
    if ("PageBreRule".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageBreRule>>(){}.getType();
    }
    
    if ("PageBreTriggerResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageBreTriggerResource>>(){}.getType();
    }
    
    if ("PageCampaignResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageCampaignResource>>(){}.getType();
    }
    
    if ("PageCartSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageCartSummary>>(){}.getType();
    }
    
    if ("PageCatalogSale".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageCatalogSale>>(){}.getType();
    }
    
    if ("PageCategoryResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageCategoryResource>>(){}.getType();
    }
    
    if ("PageChallengeEventParticipantResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageChallengeEventParticipantResource>>(){}.getType();
    }
    
    if ("PageChallengeEventResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageChallengeEventResource>>(){}.getType();
    }
    
    if ("PageChallengeResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageChallengeResource>>(){}.getType();
    }
    
    if ("PageClientResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageClientResource>>(){}.getType();
    }
    
    if ("PageCommentResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageCommentResource>>(){}.getType();
    }
    
    if ("PageConfig".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageConfig>>(){}.getType();
    }
    
    if ("PageCountryTaxResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageCountryTaxResource>>(){}.getType();
    }
    
    if ("PageCurrencyResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageCurrencyResource>>(){}.getType();
    }
    
    if ("PageDeviceResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageDeviceResource>>(){}.getType();
    }
    
    if ("PageDispositionResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageDispositionResource>>(){}.getType();
    }
    
    if ("PageEntitlementItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageEntitlementItem>>(){}.getType();
    }
    
    if ("PageFlagReportResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageFlagReportResource>>(){}.getType();
    }
    
    if ("PageForwardLog".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageForwardLog>>(){}.getType();
    }
    
    if ("PageFulfillmentType".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageFulfillmentType>>(){}.getType();
    }
    
    if ("PageGroupMemberResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageGroupMemberResource>>(){}.getType();
    }
    
    if ("PageGroupResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageGroupResource>>(){}.getType();
    }
    
    if ("PageImportJobResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageImportJobResource>>(){}.getType();
    }
    
    if ("PageInvoiceLogEntry".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageInvoiceLogEntry>>(){}.getType();
    }
    
    if ("PageInvoiceResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageInvoiceResource>>(){}.getType();
    }
    
    if ("PageItemTemplateResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageItemTemplateResource>>(){}.getType();
    }
    
    if ("PageLevelingResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageLevelingResource>>(){}.getType();
    }
    
    if ("PageLocationLogResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageLocationLogResource>>(){}.getType();
    }
    
    if ("PageMapstringobject".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageMapstringobject>>(){}.getType();
    }
    
    if ("PageOauthAccessTokenResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageOauthAccessTokenResource>>(){}.getType();
    }
    
    if ("PagePermissionResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PagePermissionResource>>(){}.getType();
    }
    
    if ("PagePollResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PagePollResource>>(){}.getType();
    }
    
    if ("PageQuestionResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageQuestionResource>>(){}.getType();
    }
    
    if ("PageQuestionTemplateResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageQuestionTemplateResource>>(){}.getType();
    }
    
    if ("PageRevenueCountryReportResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageRevenueCountryReportResource>>(){}.getType();
    }
    
    if ("PageRevenueProductReportResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageRevenueProductReportResource>>(){}.getType();
    }
    
    if ("PageRewardSetResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageRewardSetResource>>(){}.getType();
    }
    
    if ("PageRoleResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageRoleResource>>(){}.getType();
    }
    
    if ("PageSavedAddressResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageSavedAddressResource>>(){}.getType();
    }
    
    if ("PageSimpleUserResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageSimpleUserResource>>(){}.getType();
    }
    
    if ("PageSimpleWallet".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageSimpleWallet>>(){}.getType();
    }
    
    if ("PageStateTaxResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageStateTaxResource>>(){}.getType();
    }
    
    if ("PageStoreItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageStoreItem>>(){}.getType();
    }
    
    if ("PageStoreItemTemplateResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageStoreItemTemplateResource>>(){}.getType();
    }
    
    if ("PageSubscriptionResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageSubscriptionResource>>(){}.getType();
    }
    
    if ("PageSubscriptionTemplateResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageSubscriptionTemplateResource>>(){}.getType();
    }
    
    if ("PageTemplateResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageTemplateResource>>(){}.getType();
    }
    
    if ("PageTransactionResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageTransactionResource>>(){}.getType();
    }
    
    if ("PageUsageInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageUsageInfo>>(){}.getType();
    }
    
    if ("PageUserAchievementGroupResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageUserAchievementGroupResource>>(){}.getType();
    }
    
    if ("PageUserActionLog".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageUserActionLog>>(){}.getType();
    }
    
    if ("PageUserBaseResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageUserBaseResource>>(){}.getType();
    }
    
    if ("PageUserInventoryResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageUserInventoryResource>>(){}.getType();
    }
    
    if ("PageUserItemLogResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageUserItemLogResource>>(){}.getType();
    }
    
    if ("PageUserLevelingResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageUserLevelingResource>>(){}.getType();
    }
    
    if ("PageUserRelationshipResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageUserRelationshipResource>>(){}.getType();
    }
    
    if ("PageVendorResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageVendorResource>>(){}.getType();
    }
    
    if ("PageVideoRelationshipResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageVideoRelationshipResource>>(){}.getType();
    }
    
    if ("PageVideoResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageVideoResource>>(){}.getType();
    }
    
    if ("PageWalletTotalResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageWalletTotalResponse>>(){}.getType();
    }
    
    if ("PageWalletTransactionResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageWalletTransactionResource>>(){}.getType();
    }
    
    if ("Pagestring".equalsIgnoreCase(className)) {
      return new TypeToken<List<Pagestring>>(){}.getType();
    }
    
    if ("PayBySavedMethodRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<PayBySavedMethodRequest>>(){}.getType();
    }
    
    if ("PaymentAuthorizationResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PaymentAuthorizationResource>>(){}.getType();
    }
    
    if ("PaymentMethodResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PaymentMethodResource>>(){}.getType();
    }
    
    if ("PaymentMethodTypeResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PaymentMethodTypeResource>>(){}.getType();
    }
    
    if ("Permission".equalsIgnoreCase(className)) {
      return new TypeToken<List<Permission>>(){}.getType();
    }
    
    if ("PermissionResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PermissionResource>>(){}.getType();
    }
    
    if ("PollAnswerResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PollAnswerResource>>(){}.getType();
    }
    
    if ("PollResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PollResource>>(){}.getType();
    }
    
    if ("PollResponseResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PollResponseResource>>(){}.getType();
    }
    
    if ("PredicateOperation".equalsIgnoreCase(className)) {
      return new TypeToken<List<PredicateOperation>>(){}.getType();
    }
    
    if ("Property".equalsIgnoreCase(className)) {
      return new TypeToken<List<Property>>(){}.getType();
    }
    
    if ("PropertyDefinitionResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<PropertyDefinitionResource>>(){}.getType();
    }
    
    if ("QuestionResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<QuestionResource>>(){}.getType();
    }
    
    if ("QuestionTemplateResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<QuestionTemplateResource>>(){}.getType();
    }
    
    if ("RawEmailResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<RawEmailResource>>(){}.getType();
    }
    
    if ("RawSMSResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<RawSMSResource>>(){}.getType();
    }
    
    if ("ReactivateSubscriptionRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReactivateSubscriptionRequest>>(){}.getType();
    }
    
    if ("RefundRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<RefundRequest>>(){}.getType();
    }
    
    if ("RefundResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<RefundResource>>(){}.getType();
    }
    
    if ("Result".equalsIgnoreCase(className)) {
      return new TypeToken<List<Result>>(){}.getType();
    }
    
    if ("RevenueCountryReportResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<RevenueCountryReportResource>>(){}.getType();
    }
    
    if ("RevenueProductReportResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<RevenueProductReportResource>>(){}.getType();
    }
    
    if ("RevenueReportResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<RevenueReportResource>>(){}.getType();
    }
    
    if ("RewardCurrencyResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<RewardCurrencyResource>>(){}.getType();
    }
    
    if ("RewardItemResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<RewardItemResource>>(){}.getType();
    }
    
    if ("RewardSetResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<RewardSetResource>>(){}.getType();
    }
    
    if ("Role".equalsIgnoreCase(className)) {
      return new TypeToken<List<Role>>(){}.getType();
    }
    
    if ("RoleResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<RoleResource>>(){}.getType();
    }
    
    if ("SampleCountriesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<SampleCountriesResponse>>(){}.getType();
    }
    
    if ("SavedAddressResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<SavedAddressResource>>(){}.getType();
    }
    
    if ("Schedule".equalsIgnoreCase(className)) {
      return new TypeToken<List<Schedule>>(){}.getType();
    }
    
    if ("SearchReferenceMapping".equalsIgnoreCase(className)) {
      return new TypeToken<List<SearchReferenceMapping>>(){}.getType();
    }
    
    if ("SelectedSettingResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<SelectedSettingResource>>(){}.getType();
    }
    
    if ("SettingOption".equalsIgnoreCase(className)) {
      return new TypeToken<List<SettingOption>>(){}.getType();
    }
    
    if ("ShippingItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<ShippingItem>>(){}.getType();
    }
    
    if ("SimpleReferenceResourceint".equalsIgnoreCase(className)) {
      return new TypeToken<List<SimpleReferenceResourceint>>(){}.getType();
    }
    
    if ("SimpleReferenceResourcelong".equalsIgnoreCase(className)) {
      return new TypeToken<List<SimpleReferenceResourcelong>>(){}.getType();
    }
    
    if ("SimpleReferenceResourcestring".equalsIgnoreCase(className)) {
      return new TypeToken<List<SimpleReferenceResourcestring>>(){}.getType();
    }
    
    if ("SimpleUserResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<SimpleUserResource>>(){}.getType();
    }
    
    if ("SimpleWallet".equalsIgnoreCase(className)) {
      return new TypeToken<List<SimpleWallet>>(){}.getType();
    }
    
    if ("Sku".equalsIgnoreCase(className)) {
      return new TypeToken<List<Sku>>(){}.getType();
    }
    
    if ("SkuRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<SkuRequest>>(){}.getType();
    }
    
    if ("Sort".equalsIgnoreCase(className)) {
      return new TypeToken<List<Sort>>(){}.getType();
    }
    
    if ("SqlDatabaseConfig".equalsIgnoreCase(className)) {
      return new TypeToken<List<SqlDatabaseConfig>>(){}.getType();
    }
    
    if ("StateResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<StateResource>>(){}.getType();
    }
    
    if ("StateTaxResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<StateTaxResource>>(){}.getType();
    }
    
    if ("StoreItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoreItem>>(){}.getType();
    }
    
    if ("StoreItemTemplateResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoreItemTemplateResource>>(){}.getType();
    }
    
    if ("StoreListRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoreListRequest>>(){}.getType();
    }
    
    if ("StripeCreatePaymentMethod".equalsIgnoreCase(className)) {
      return new TypeToken<List<StripeCreatePaymentMethod>>(){}.getType();
    }
    
    if ("StripePaymentRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<StripePaymentRequest>>(){}.getType();
    }
    
    if ("SubscriptionCreditResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<SubscriptionCreditResource>>(){}.getType();
    }
    
    if ("SubscriptionPlanResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<SubscriptionPlanResource>>(){}.getType();
    }
    
    if ("SubscriptionResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<SubscriptionResource>>(){}.getType();
    }
    
    if ("SubscriptionTemplateResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<SubscriptionTemplateResource>>(){}.getType();
    }
    
    if ("TemplateEmailResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<TemplateEmailResource>>(){}.getType();
    }
    
    if ("TemplateResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<TemplateResource>>(){}.getType();
    }
    
    if ("TemplateSMSResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<TemplateSMSResource>>(){}.getType();
    }
    
    if ("TierResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<TierResource>>(){}.getType();
    }
    
    if ("Timezone".equalsIgnoreCase(className)) {
      return new TypeToken<List<Timezone>>(){}.getType();
    }
    
    if ("TokenDetailsResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<TokenDetailsResource>>(){}.getType();
    }
    
    if ("TransactionResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<TransactionResource>>(){}.getType();
    }
    
    if ("UsageInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<UsageInfo>>(){}.getType();
    }
    
    if ("User".equalsIgnoreCase(className)) {
      return new TypeToken<List<User>>(){}.getType();
    }
    
    if ("UserAchievementGroupResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserAchievementGroupResource>>(){}.getType();
    }
    
    if ("UserAchievementResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserAchievementResource>>(){}.getType();
    }
    
    if ("UserActionLog".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserActionLog>>(){}.getType();
    }
    
    if ("UserActivityResultsResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserActivityResultsResource>>(){}.getType();
    }
    
    if ("UserBaseResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserBaseResource>>(){}.getType();
    }
    
    if ("UserInventoryAddRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserInventoryAddRequest>>(){}.getType();
    }
    
    if ("UserInventoryResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserInventoryResource>>(){}.getType();
    }
    
    if ("UserItemLogResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserItemLogResource>>(){}.getType();
    }
    
    if ("UserLevelingResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserLevelingResource>>(){}.getType();
    }
    
    if ("UserRelationship".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserRelationship>>(){}.getType();
    }
    
    if ("UserRelationshipReferenceResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserRelationshipReferenceResource>>(){}.getType();
    }
    
    if ("UserRelationshipResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserRelationshipResource>>(){}.getType();
    }
    
    if ("UserResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserResource>>(){}.getType();
    }
    
    if ("UserTag".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserTag>>(){}.getType();
    }
    
    if ("VariableTypeResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<VariableTypeResource>>(){}.getType();
    }
    
    if ("VendorResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<VendorResource>>(){}.getType();
    }
    
    if ("Video".equalsIgnoreCase(className)) {
      return new TypeToken<List<Video>>(){}.getType();
    }
    
    if ("VideoContribution".equalsIgnoreCase(className)) {
      return new TypeToken<List<VideoContribution>>(){}.getType();
    }
    
    if ("VideoRelationshipResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<VideoRelationshipResource>>(){}.getType();
    }
    
    if ("VideoResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<VideoResource>>(){}.getType();
    }
    
    if ("VideoTag".equalsIgnoreCase(className)) {
      return new TypeToken<List<VideoTag>>(){}.getType();
    }
    
    if ("WalletAlterRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<WalletAlterRequest>>(){}.getType();
    }
    
    if ("WalletTotalResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<WalletTotalResponse>>(){}.getType();
    }
    
    if ("WalletTransactionResource".equalsIgnoreCase(className)) {
      return new TypeToken<List<WalletTransactionResource>>(){}.getType();
    }
    
    if ("XsollaPaymentRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<XsollaPaymentRequest>>(){}.getType();
    }
    
    return new TypeToken<List<Object>>(){}.getType();
  }

  public static Type getTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("AchievementDefinitionResource".equalsIgnoreCase(className)) {
      return new TypeToken<AchievementDefinitionResource>(){}.getType();
    }
    
    if ("AchievementProgressUpdateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<AchievementProgressUpdateRequest>(){}.getType();
    }
    
    if ("ActionResource".equalsIgnoreCase(className)) {
      return new TypeToken<ActionResource>(){}.getType();
    }
    
    if ("ActionVariableResource".equalsIgnoreCase(className)) {
      return new TypeToken<ActionVariableResource>(){}.getType();
    }
    
    if ("ActivityEntitlementResource".equalsIgnoreCase(className)) {
      return new TypeToken<ActivityEntitlementResource>(){}.getType();
    }
    
    if ("ActivityOccurrenceCreationFailure".equalsIgnoreCase(className)) {
      return new TypeToken<ActivityOccurrenceCreationFailure>(){}.getType();
    }
    
    if ("ActivityOccurrenceJoinResult".equalsIgnoreCase(className)) {
      return new TypeToken<ActivityOccurrenceJoinResult>(){}.getType();
    }
    
    if ("ActivityOccurrenceResource".equalsIgnoreCase(className)) {
      return new TypeToken<ActivityOccurrenceResource>(){}.getType();
    }
    
    if ("ActivityOccurrenceResults".equalsIgnoreCase(className)) {
      return new TypeToken<ActivityOccurrenceResults>(){}.getType();
    }
    
    if ("ActivityResource".equalsIgnoreCase(className)) {
      return new TypeToken<ActivityResource>(){}.getType();
    }
    
    if ("ActivityUserResource".equalsIgnoreCase(className)) {
      return new TypeToken<ActivityUserResource>(){}.getType();
    }
    
    if ("AddressResource".equalsIgnoreCase(className)) {
      return new TypeToken<AddressResource>(){}.getType();
    }
    
    if ("Affiliate".equalsIgnoreCase(className)) {
      return new TypeToken<Affiliate>(){}.getType();
    }
    
    if ("AggregateCountResource".equalsIgnoreCase(className)) {
      return new TypeToken<AggregateCountResource>(){}.getType();
    }
    
    if ("AggregateInvoiceReportResource".equalsIgnoreCase(className)) {
      return new TypeToken<AggregateInvoiceReportResource>(){}.getType();
    }
    
    if ("AmazonS3Activity".equalsIgnoreCase(className)) {
      return new TypeToken<AmazonS3Activity>(){}.getType();
    }
    
    if ("AnswerResource".equalsIgnoreCase(className)) {
      return new TypeToken<AnswerResource>(){}.getType();
    }
    
    if ("ApplyPaymentRequest".equalsIgnoreCase(className)) {
      return new TypeToken<ApplyPaymentRequest>(){}.getType();
    }
    
    if ("ArticleResource".equalsIgnoreCase(className)) {
      return new TypeToken<ArticleResource>(){}.getType();
    }
    
    if ("Artist".equalsIgnoreCase(className)) {
      return new TypeToken<Artist>(){}.getType();
    }
    
    if ("ArtistResource".equalsIgnoreCase(className)) {
      return new TypeToken<ArtistResource>(){}.getType();
    }
    
    if ("AvailableSettingResource".equalsIgnoreCase(className)) {
      return new TypeToken<AvailableSettingResource>(){}.getType();
    }
    
    if ("BareActivityResource".equalsIgnoreCase(className)) {
      return new TypeToken<BareActivityResource>(){}.getType();
    }
    
    if ("BareChallengeActivityResource".equalsIgnoreCase(className)) {
      return new TypeToken<BareChallengeActivityResource>(){}.getType();
    }
    
    if ("Batch".equalsIgnoreCase(className)) {
      return new TypeToken<Batch>(){}.getType();
    }
    
    if ("BatchRequest".equalsIgnoreCase(className)) {
      return new TypeToken<BatchRequest>(){}.getType();
    }
    
    if ("BatchReturn".equalsIgnoreCase(className)) {
      return new TypeToken<BatchReturn>(){}.getType();
    }
    
    if ("Behavior".equalsIgnoreCase(className)) {
      return new TypeToken<Behavior>(){}.getType();
    }
    
    if ("BillingReport".equalsIgnoreCase(className)) {
      return new TypeToken<BillingReport>(){}.getType();
    }
    
    if ("BooleanResource".equalsIgnoreCase(className)) {
      return new TypeToken<BooleanResource>(){}.getType();
    }
    
    if ("BreCategoryResource".equalsIgnoreCase(className)) {
      return new TypeToken<BreCategoryResource>(){}.getType();
    }
    
    if ("BreEvent".equalsIgnoreCase(className)) {
      return new TypeToken<BreEvent>(){}.getType();
    }
    
    if ("BreEventLog".equalsIgnoreCase(className)) {
      return new TypeToken<BreEventLog>(){}.getType();
    }
    
    if ("BreGlobalResource".equalsIgnoreCase(className)) {
      return new TypeToken<BreGlobalResource>(){}.getType();
    }
    
    if ("BreGlobalScopeDefinition".equalsIgnoreCase(className)) {
      return new TypeToken<BreGlobalScopeDefinition>(){}.getType();
    }
    
    if ("BreRule".equalsIgnoreCase(className)) {
      return new TypeToken<BreRule>(){}.getType();
    }
    
    if ("BreRuleLog".equalsIgnoreCase(className)) {
      return new TypeToken<BreRuleLog>(){}.getType();
    }
    
    if ("BreTriggerParameterDefinition".equalsIgnoreCase(className)) {
      return new TypeToken<BreTriggerParameterDefinition>(){}.getType();
    }
    
    if ("BreTriggerResource".equalsIgnoreCase(className)) {
      return new TypeToken<BreTriggerResource>(){}.getType();
    }
    
    if ("BundleItem".equalsIgnoreCase(className)) {
      return new TypeToken<BundleItem>(){}.getType();
    }
    
    if ("BundledSku".equalsIgnoreCase(className)) {
      return new TypeToken<BundledSku>(){}.getType();
    }
    
    if ("CampaignResource".equalsIgnoreCase(className)) {
      return new TypeToken<CampaignResource>(){}.getType();
    }
    
    if ("Cart".equalsIgnoreCase(className)) {
      return new TypeToken<Cart>(){}.getType();
    }
    
    if ("CartItemRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CartItemRequest>(){}.getType();
    }
    
    if ("CartLineItem".equalsIgnoreCase(className)) {
      return new TypeToken<CartLineItem>(){}.getType();
    }
    
    if ("CartShippableResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CartShippableResponse>(){}.getType();
    }
    
    if ("CartShippingAddressRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CartShippingAddressRequest>(){}.getType();
    }
    
    if ("CartShippingOption".equalsIgnoreCase(className)) {
      return new TypeToken<CartShippingOption>(){}.getType();
    }
    
    if ("CartSummary".equalsIgnoreCase(className)) {
      return new TypeToken<CartSummary>(){}.getType();
    }
    
    if ("CatalogSale".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogSale>(){}.getType();
    }
    
    if ("CategoryResource".equalsIgnoreCase(className)) {
      return new TypeToken<CategoryResource>(){}.getType();
    }
    
    if ("ChallengeActivityResource".equalsIgnoreCase(className)) {
      return new TypeToken<ChallengeActivityResource>(){}.getType();
    }
    
    if ("ChallengeEventParticipantResource".equalsIgnoreCase(className)) {
      return new TypeToken<ChallengeEventParticipantResource>(){}.getType();
    }
    
    if ("ChallengeEventResource".equalsIgnoreCase(className)) {
      return new TypeToken<ChallengeEventResource>(){}.getType();
    }
    
    if ("ChallengeResource".equalsIgnoreCase(className)) {
      return new TypeToken<ChallengeResource>(){}.getType();
    }
    
    if ("CityResource".equalsIgnoreCase(className)) {
      return new TypeToken<CityResource>(){}.getType();
    }
    
    if ("ClientResource".equalsIgnoreCase(className)) {
      return new TypeToken<ClientResource>(){}.getType();
    }
    
    if ("CollectionCountry".equalsIgnoreCase(className)) {
      return new TypeToken<CollectionCountry>(){}.getType();
    }
    
    if ("CollectionVideoContribution".equalsIgnoreCase(className)) {
      return new TypeToken<CollectionVideoContribution>(){}.getType();
    }
    
    if ("Collectionstring".equalsIgnoreCase(className)) {
      return new TypeToken<Collectionstring>(){}.getType();
    }
    
    if ("CommentResource".equalsIgnoreCase(className)) {
      return new TypeToken<CommentResource>(){}.getType();
    }
    
    if ("CommentSearch".equalsIgnoreCase(className)) {
      return new TypeToken<CommentSearch>(){}.getType();
    }
    
    if ("Config".equalsIgnoreCase(className)) {
      return new TypeToken<Config>(){}.getType();
    }
    
    if ("ContributionResource".equalsIgnoreCase(className)) {
      return new TypeToken<ContributionResource>(){}.getType();
    }
    
    if ("Country".equalsIgnoreCase(className)) {
      return new TypeToken<Country>(){}.getType();
    }
    
    if ("CountryResource".equalsIgnoreCase(className)) {
      return new TypeToken<CountryResource>(){}.getType();
    }
    
    if ("CountryTaxResource".equalsIgnoreCase(className)) {
      return new TypeToken<CountryTaxResource>(){}.getType();
    }
    
    if ("CouponDefinition".equalsIgnoreCase(className)) {
      return new TypeToken<CouponDefinition>(){}.getType();
    }
    
    if ("CouponItem".equalsIgnoreCase(className)) {
      return new TypeToken<CouponItem>(){}.getType();
    }
    
    if ("CreateBillingAgreementRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CreateBillingAgreementRequest>(){}.getType();
    }
    
    if ("CreatePayPalPaymentRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CreatePayPalPaymentRequest>(){}.getType();
    }
    
    if ("Currency".equalsIgnoreCase(className)) {
      return new TypeToken<Currency>(){}.getType();
    }
    
    if ("CurrencyResource".equalsIgnoreCase(className)) {
      return new TypeToken<CurrencyResource>(){}.getType();
    }
    
    if ("CustomerConfig".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerConfig>(){}.getType();
    }
    
    if ("CustomerResource".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerResource>(){}.getType();
    }
    
    if ("DatabaseConfig".equalsIgnoreCase(className)) {
      return new TypeToken<DatabaseConfig>(){}.getType();
    }
    
    if ("DeltaResource".equalsIgnoreCase(className)) {
      return new TypeToken<DeltaResource>(){}.getType();
    }
    
    if ("DeviceResource".equalsIgnoreCase(className)) {
      return new TypeToken<DeviceResource>(){}.getType();
    }
    
    if ("Discount".equalsIgnoreCase(className)) {
      return new TypeToken<Discount>(){}.getType();
    }
    
    if ("DispositionCount".equalsIgnoreCase(className)) {
      return new TypeToken<DispositionCount>(){}.getType();
    }
    
    if ("DispositionResource".equalsIgnoreCase(className)) {
      return new TypeToken<DispositionResource>(){}.getType();
    }
    
    if ("EntitlementItem".equalsIgnoreCase(className)) {
      return new TypeToken<EntitlementItem>(){}.getType();
    }
    
    if ("Expressionobject".equalsIgnoreCase(className)) {
      return new TypeToken<Expressionobject>(){}.getType();
    }
    
    if ("FinalizeBillingAgreementRequest".equalsIgnoreCase(className)) {
      return new TypeToken<FinalizeBillingAgreementRequest>(){}.getType();
    }
    
    if ("FinalizePayPalPaymentRequest".equalsIgnoreCase(className)) {
      return new TypeToken<FinalizePayPalPaymentRequest>(){}.getType();
    }
    
    if ("FlagReportResource".equalsIgnoreCase(className)) {
      return new TypeToken<FlagReportResource>(){}.getType();
    }
    
    if ("FlagResource".equalsIgnoreCase(className)) {
      return new TypeToken<FlagResource>(){}.getType();
    }
    
    if ("ForwardLog".equalsIgnoreCase(className)) {
      return new TypeToken<ForwardLog>(){}.getType();
    }
    
    if ("FulfillmentType".equalsIgnoreCase(className)) {
      return new TypeToken<FulfillmentType>(){}.getType();
    }
    
    if ("GooglePaymentRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GooglePaymentRequest>(){}.getType();
    }
    
    if ("GrantTypeResource".equalsIgnoreCase(className)) {
      return new TypeToken<GrantTypeResource>(){}.getType();
    }
    
    if ("Group".equalsIgnoreCase(className)) {
      return new TypeToken<Group>(){}.getType();
    }
    
    if ("GroupMember".equalsIgnoreCase(className)) {
      return new TypeToken<GroupMember>(){}.getType();
    }
    
    if ("GroupMemberResource".equalsIgnoreCase(className)) {
      return new TypeToken<GroupMemberResource>(){}.getType();
    }
    
    if ("GroupResource".equalsIgnoreCase(className)) {
      return new TypeToken<GroupResource>(){}.getType();
    }
    
    if ("ImportJobOutputResource".equalsIgnoreCase(className)) {
      return new TypeToken<ImportJobOutputResource>(){}.getType();
    }
    
    if ("ImportJobResource".equalsIgnoreCase(className)) {
      return new TypeToken<ImportJobResource>(){}.getType();
    }
    
    if ("InventorySubscriptionResource".equalsIgnoreCase(className)) {
      return new TypeToken<InventorySubscriptionResource>(){}.getType();
    }
    
    if ("InvoiceCreateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<InvoiceCreateRequest>(){}.getType();
    }
    
    if ("InvoiceItemResource".equalsIgnoreCase(className)) {
      return new TypeToken<InvoiceItemResource>(){}.getType();
    }
    
    if ("InvoiceLogEntry".equalsIgnoreCase(className)) {
      return new TypeToken<InvoiceLogEntry>(){}.getType();
    }
    
    if ("InvoicePaymentStatusRequest".equalsIgnoreCase(className)) {
      return new TypeToken<InvoicePaymentStatusRequest>(){}.getType();
    }
    
    if ("InvoiceResource".equalsIgnoreCase(className)) {
      return new TypeToken<InvoiceResource>(){}.getType();
    }
    
    if ("ItemBehaviorDefinitionResource".equalsIgnoreCase(className)) {
      return new TypeToken<ItemBehaviorDefinitionResource>(){}.getType();
    }
    
    if ("ItemTemplateResource".equalsIgnoreCase(className)) {
      return new TypeToken<ItemTemplateResource>(){}.getType();
    }
    
    if ("KeyValuePairstringstring".equalsIgnoreCase(className)) {
      return new TypeToken<KeyValuePairstringstring>(){}.getType();
    }
    
    if ("Language".equalsIgnoreCase(className)) {
      return new TypeToken<Language>(){}.getType();
    }
    
    if ("LeaderboardEntryResource".equalsIgnoreCase(className)) {
      return new TypeToken<LeaderboardEntryResource>(){}.getType();
    }
    
    if ("LeaderboardResource".equalsIgnoreCase(className)) {
      return new TypeToken<LeaderboardResource>(){}.getType();
    }
    
    if ("LevelingResource".equalsIgnoreCase(className)) {
      return new TypeToken<LevelingResource>(){}.getType();
    }
    
    if ("Localizer".equalsIgnoreCase(className)) {
      return new TypeToken<Localizer>(){}.getType();
    }
    
    if ("LocationLogResource".equalsIgnoreCase(className)) {
      return new TypeToken<LocationLogResource>(){}.getType();
    }
    
    if ("LookupTypeResource".equalsIgnoreCase(className)) {
      return new TypeToken<LookupTypeResource>(){}.getType();
    }
    
    if ("Maintenance".equalsIgnoreCase(className)) {
      return new TypeToken<Maintenance>(){}.getType();
    }
    
    if ("Mapstringobject".equalsIgnoreCase(className)) {
      return new TypeToken<Mapstringobject>(){}.getType();
    }
    
    if ("MetricResource".equalsIgnoreCase(className)) {
      return new TypeToken<MetricResource>(){}.getType();
    }
    
    if ("MongoDatabaseConfig".equalsIgnoreCase(className)) {
      return new TypeToken<MongoDatabaseConfig>(){}.getType();
    }
    
    if ("NestedCategory".equalsIgnoreCase(className)) {
      return new TypeToken<NestedCategory>(){}.getType();
    }
    
    if ("NewPasswordRequest".equalsIgnoreCase(className)) {
      return new TypeToken<NewPasswordRequest>(){}.getType();
    }
    
    if ("OauthAccessTokenResource".equalsIgnoreCase(className)) {
      return new TypeToken<OauthAccessTokenResource>(){}.getType();
    }
    
    if ("Operator".equalsIgnoreCase(className)) {
      return new TypeToken<Operator>(){}.getType();
    }
    
    if ("OptimalPaymentRequest".equalsIgnoreCase(className)) {
      return new TypeToken<OptimalPaymentRequest>(){}.getType();
    }
    
    if ("PageAchievementDefinitionResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageAchievementDefinitionResource>(){}.getType();
    }
    
    if ("PageAggregateCountResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageAggregateCountResource>(){}.getType();
    }
    
    if ("PageAggregateInvoiceReportResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageAggregateInvoiceReportResource>(){}.getType();
    }
    
    if ("PageArticleResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageArticleResource>(){}.getType();
    }
    
    if ("PageArtistResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageArtistResource>(){}.getType();
    }
    
    if ("PageBareActivityResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageBareActivityResource>(){}.getType();
    }
    
    if ("PageBareChallengeActivityResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageBareChallengeActivityResource>(){}.getType();
    }
    
    if ("PageBillingReport".equalsIgnoreCase(className)) {
      return new TypeToken<PageBillingReport>(){}.getType();
    }
    
    if ("PageBreCategoryResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageBreCategoryResource>(){}.getType();
    }
    
    if ("PageBreEventLog".equalsIgnoreCase(className)) {
      return new TypeToken<PageBreEventLog>(){}.getType();
    }
    
    if ("PageBreGlobalResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageBreGlobalResource>(){}.getType();
    }
    
    if ("PageBreRule".equalsIgnoreCase(className)) {
      return new TypeToken<PageBreRule>(){}.getType();
    }
    
    if ("PageBreTriggerResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageBreTriggerResource>(){}.getType();
    }
    
    if ("PageCampaignResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageCampaignResource>(){}.getType();
    }
    
    if ("PageCartSummary".equalsIgnoreCase(className)) {
      return new TypeToken<PageCartSummary>(){}.getType();
    }
    
    if ("PageCatalogSale".equalsIgnoreCase(className)) {
      return new TypeToken<PageCatalogSale>(){}.getType();
    }
    
    if ("PageCategoryResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageCategoryResource>(){}.getType();
    }
    
    if ("PageChallengeEventParticipantResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageChallengeEventParticipantResource>(){}.getType();
    }
    
    if ("PageChallengeEventResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageChallengeEventResource>(){}.getType();
    }
    
    if ("PageChallengeResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageChallengeResource>(){}.getType();
    }
    
    if ("PageClientResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageClientResource>(){}.getType();
    }
    
    if ("PageCommentResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageCommentResource>(){}.getType();
    }
    
    if ("PageConfig".equalsIgnoreCase(className)) {
      return new TypeToken<PageConfig>(){}.getType();
    }
    
    if ("PageCountryTaxResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageCountryTaxResource>(){}.getType();
    }
    
    if ("PageCurrencyResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageCurrencyResource>(){}.getType();
    }
    
    if ("PageDeviceResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageDeviceResource>(){}.getType();
    }
    
    if ("PageDispositionResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageDispositionResource>(){}.getType();
    }
    
    if ("PageEntitlementItem".equalsIgnoreCase(className)) {
      return new TypeToken<PageEntitlementItem>(){}.getType();
    }
    
    if ("PageFlagReportResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageFlagReportResource>(){}.getType();
    }
    
    if ("PageForwardLog".equalsIgnoreCase(className)) {
      return new TypeToken<PageForwardLog>(){}.getType();
    }
    
    if ("PageFulfillmentType".equalsIgnoreCase(className)) {
      return new TypeToken<PageFulfillmentType>(){}.getType();
    }
    
    if ("PageGroupMemberResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageGroupMemberResource>(){}.getType();
    }
    
    if ("PageGroupResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageGroupResource>(){}.getType();
    }
    
    if ("PageImportJobResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageImportJobResource>(){}.getType();
    }
    
    if ("PageInvoiceLogEntry".equalsIgnoreCase(className)) {
      return new TypeToken<PageInvoiceLogEntry>(){}.getType();
    }
    
    if ("PageInvoiceResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageInvoiceResource>(){}.getType();
    }
    
    if ("PageItemTemplateResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageItemTemplateResource>(){}.getType();
    }
    
    if ("PageLevelingResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageLevelingResource>(){}.getType();
    }
    
    if ("PageLocationLogResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageLocationLogResource>(){}.getType();
    }
    
    if ("PageMapstringobject".equalsIgnoreCase(className)) {
      return new TypeToken<PageMapstringobject>(){}.getType();
    }
    
    if ("PageOauthAccessTokenResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageOauthAccessTokenResource>(){}.getType();
    }
    
    if ("PagePermissionResource".equalsIgnoreCase(className)) {
      return new TypeToken<PagePermissionResource>(){}.getType();
    }
    
    if ("PagePollResource".equalsIgnoreCase(className)) {
      return new TypeToken<PagePollResource>(){}.getType();
    }
    
    if ("PageQuestionResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageQuestionResource>(){}.getType();
    }
    
    if ("PageQuestionTemplateResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageQuestionTemplateResource>(){}.getType();
    }
    
    if ("PageRevenueCountryReportResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageRevenueCountryReportResource>(){}.getType();
    }
    
    if ("PageRevenueProductReportResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageRevenueProductReportResource>(){}.getType();
    }
    
    if ("PageRewardSetResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageRewardSetResource>(){}.getType();
    }
    
    if ("PageRoleResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageRoleResource>(){}.getType();
    }
    
    if ("PageSavedAddressResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageSavedAddressResource>(){}.getType();
    }
    
    if ("PageSimpleUserResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageSimpleUserResource>(){}.getType();
    }
    
    if ("PageSimpleWallet".equalsIgnoreCase(className)) {
      return new TypeToken<PageSimpleWallet>(){}.getType();
    }
    
    if ("PageStateTaxResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageStateTaxResource>(){}.getType();
    }
    
    if ("PageStoreItem".equalsIgnoreCase(className)) {
      return new TypeToken<PageStoreItem>(){}.getType();
    }
    
    if ("PageStoreItemTemplateResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageStoreItemTemplateResource>(){}.getType();
    }
    
    if ("PageSubscriptionResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageSubscriptionResource>(){}.getType();
    }
    
    if ("PageSubscriptionTemplateResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageSubscriptionTemplateResource>(){}.getType();
    }
    
    if ("PageTemplateResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageTemplateResource>(){}.getType();
    }
    
    if ("PageTransactionResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageTransactionResource>(){}.getType();
    }
    
    if ("PageUsageInfo".equalsIgnoreCase(className)) {
      return new TypeToken<PageUsageInfo>(){}.getType();
    }
    
    if ("PageUserAchievementGroupResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageUserAchievementGroupResource>(){}.getType();
    }
    
    if ("PageUserActionLog".equalsIgnoreCase(className)) {
      return new TypeToken<PageUserActionLog>(){}.getType();
    }
    
    if ("PageUserBaseResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageUserBaseResource>(){}.getType();
    }
    
    if ("PageUserInventoryResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageUserInventoryResource>(){}.getType();
    }
    
    if ("PageUserItemLogResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageUserItemLogResource>(){}.getType();
    }
    
    if ("PageUserLevelingResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageUserLevelingResource>(){}.getType();
    }
    
    if ("PageUserRelationshipResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageUserRelationshipResource>(){}.getType();
    }
    
    if ("PageVendorResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageVendorResource>(){}.getType();
    }
    
    if ("PageVideoRelationshipResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageVideoRelationshipResource>(){}.getType();
    }
    
    if ("PageVideoResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageVideoResource>(){}.getType();
    }
    
    if ("PageWalletTotalResponse".equalsIgnoreCase(className)) {
      return new TypeToken<PageWalletTotalResponse>(){}.getType();
    }
    
    if ("PageWalletTransactionResource".equalsIgnoreCase(className)) {
      return new TypeToken<PageWalletTransactionResource>(){}.getType();
    }
    
    if ("Pagestring".equalsIgnoreCase(className)) {
      return new TypeToken<Pagestring>(){}.getType();
    }
    
    if ("PayBySavedMethodRequest".equalsIgnoreCase(className)) {
      return new TypeToken<PayBySavedMethodRequest>(){}.getType();
    }
    
    if ("PaymentAuthorizationResource".equalsIgnoreCase(className)) {
      return new TypeToken<PaymentAuthorizationResource>(){}.getType();
    }
    
    if ("PaymentMethodResource".equalsIgnoreCase(className)) {
      return new TypeToken<PaymentMethodResource>(){}.getType();
    }
    
    if ("PaymentMethodTypeResource".equalsIgnoreCase(className)) {
      return new TypeToken<PaymentMethodTypeResource>(){}.getType();
    }
    
    if ("Permission".equalsIgnoreCase(className)) {
      return new TypeToken<Permission>(){}.getType();
    }
    
    if ("PermissionResource".equalsIgnoreCase(className)) {
      return new TypeToken<PermissionResource>(){}.getType();
    }
    
    if ("PollAnswerResource".equalsIgnoreCase(className)) {
      return new TypeToken<PollAnswerResource>(){}.getType();
    }
    
    if ("PollResource".equalsIgnoreCase(className)) {
      return new TypeToken<PollResource>(){}.getType();
    }
    
    if ("PollResponseResource".equalsIgnoreCase(className)) {
      return new TypeToken<PollResponseResource>(){}.getType();
    }
    
    if ("PredicateOperation".equalsIgnoreCase(className)) {
      return new TypeToken<PredicateOperation>(){}.getType();
    }
    
    if ("Property".equalsIgnoreCase(className)) {
      return new TypeToken<Property>(){}.getType();
    }
    
    if ("PropertyDefinitionResource".equalsIgnoreCase(className)) {
      return new TypeToken<PropertyDefinitionResource>(){}.getType();
    }
    
    if ("QuestionResource".equalsIgnoreCase(className)) {
      return new TypeToken<QuestionResource>(){}.getType();
    }
    
    if ("QuestionTemplateResource".equalsIgnoreCase(className)) {
      return new TypeToken<QuestionTemplateResource>(){}.getType();
    }
    
    if ("RawEmailResource".equalsIgnoreCase(className)) {
      return new TypeToken<RawEmailResource>(){}.getType();
    }
    
    if ("RawSMSResource".equalsIgnoreCase(className)) {
      return new TypeToken<RawSMSResource>(){}.getType();
    }
    
    if ("ReactivateSubscriptionRequest".equalsIgnoreCase(className)) {
      return new TypeToken<ReactivateSubscriptionRequest>(){}.getType();
    }
    
    if ("RefundRequest".equalsIgnoreCase(className)) {
      return new TypeToken<RefundRequest>(){}.getType();
    }
    
    if ("RefundResource".equalsIgnoreCase(className)) {
      return new TypeToken<RefundResource>(){}.getType();
    }
    
    if ("Result".equalsIgnoreCase(className)) {
      return new TypeToken<Result>(){}.getType();
    }
    
    if ("RevenueCountryReportResource".equalsIgnoreCase(className)) {
      return new TypeToken<RevenueCountryReportResource>(){}.getType();
    }
    
    if ("RevenueProductReportResource".equalsIgnoreCase(className)) {
      return new TypeToken<RevenueProductReportResource>(){}.getType();
    }
    
    if ("RevenueReportResource".equalsIgnoreCase(className)) {
      return new TypeToken<RevenueReportResource>(){}.getType();
    }
    
    if ("RewardCurrencyResource".equalsIgnoreCase(className)) {
      return new TypeToken<RewardCurrencyResource>(){}.getType();
    }
    
    if ("RewardItemResource".equalsIgnoreCase(className)) {
      return new TypeToken<RewardItemResource>(){}.getType();
    }
    
    if ("RewardSetResource".equalsIgnoreCase(className)) {
      return new TypeToken<RewardSetResource>(){}.getType();
    }
    
    if ("Role".equalsIgnoreCase(className)) {
      return new TypeToken<Role>(){}.getType();
    }
    
    if ("RoleResource".equalsIgnoreCase(className)) {
      return new TypeToken<RoleResource>(){}.getType();
    }
    
    if ("SampleCountriesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<SampleCountriesResponse>(){}.getType();
    }
    
    if ("SavedAddressResource".equalsIgnoreCase(className)) {
      return new TypeToken<SavedAddressResource>(){}.getType();
    }
    
    if ("Schedule".equalsIgnoreCase(className)) {
      return new TypeToken<Schedule>(){}.getType();
    }
    
    if ("SearchReferenceMapping".equalsIgnoreCase(className)) {
      return new TypeToken<SearchReferenceMapping>(){}.getType();
    }
    
    if ("SelectedSettingResource".equalsIgnoreCase(className)) {
      return new TypeToken<SelectedSettingResource>(){}.getType();
    }
    
    if ("SettingOption".equalsIgnoreCase(className)) {
      return new TypeToken<SettingOption>(){}.getType();
    }
    
    if ("ShippingItem".equalsIgnoreCase(className)) {
      return new TypeToken<ShippingItem>(){}.getType();
    }
    
    if ("SimpleReferenceResourceint".equalsIgnoreCase(className)) {
      return new TypeToken<SimpleReferenceResourceint>(){}.getType();
    }
    
    if ("SimpleReferenceResourcelong".equalsIgnoreCase(className)) {
      return new TypeToken<SimpleReferenceResourcelong>(){}.getType();
    }
    
    if ("SimpleReferenceResourcestring".equalsIgnoreCase(className)) {
      return new TypeToken<SimpleReferenceResourcestring>(){}.getType();
    }
    
    if ("SimpleUserResource".equalsIgnoreCase(className)) {
      return new TypeToken<SimpleUserResource>(){}.getType();
    }
    
    if ("SimpleWallet".equalsIgnoreCase(className)) {
      return new TypeToken<SimpleWallet>(){}.getType();
    }
    
    if ("Sku".equalsIgnoreCase(className)) {
      return new TypeToken<Sku>(){}.getType();
    }
    
    if ("SkuRequest".equalsIgnoreCase(className)) {
      return new TypeToken<SkuRequest>(){}.getType();
    }
    
    if ("Sort".equalsIgnoreCase(className)) {
      return new TypeToken<Sort>(){}.getType();
    }
    
    if ("SqlDatabaseConfig".equalsIgnoreCase(className)) {
      return new TypeToken<SqlDatabaseConfig>(){}.getType();
    }
    
    if ("StateResource".equalsIgnoreCase(className)) {
      return new TypeToken<StateResource>(){}.getType();
    }
    
    if ("StateTaxResource".equalsIgnoreCase(className)) {
      return new TypeToken<StateTaxResource>(){}.getType();
    }
    
    if ("StoreItem".equalsIgnoreCase(className)) {
      return new TypeToken<StoreItem>(){}.getType();
    }
    
    if ("StoreItemTemplateResource".equalsIgnoreCase(className)) {
      return new TypeToken<StoreItemTemplateResource>(){}.getType();
    }
    
    if ("StoreListRequest".equalsIgnoreCase(className)) {
      return new TypeToken<StoreListRequest>(){}.getType();
    }
    
    if ("StripeCreatePaymentMethod".equalsIgnoreCase(className)) {
      return new TypeToken<StripeCreatePaymentMethod>(){}.getType();
    }
    
    if ("StripePaymentRequest".equalsIgnoreCase(className)) {
      return new TypeToken<StripePaymentRequest>(){}.getType();
    }
    
    if ("SubscriptionCreditResource".equalsIgnoreCase(className)) {
      return new TypeToken<SubscriptionCreditResource>(){}.getType();
    }
    
    if ("SubscriptionPlanResource".equalsIgnoreCase(className)) {
      return new TypeToken<SubscriptionPlanResource>(){}.getType();
    }
    
    if ("SubscriptionResource".equalsIgnoreCase(className)) {
      return new TypeToken<SubscriptionResource>(){}.getType();
    }
    
    if ("SubscriptionTemplateResource".equalsIgnoreCase(className)) {
      return new TypeToken<SubscriptionTemplateResource>(){}.getType();
    }
    
    if ("TemplateEmailResource".equalsIgnoreCase(className)) {
      return new TypeToken<TemplateEmailResource>(){}.getType();
    }
    
    if ("TemplateResource".equalsIgnoreCase(className)) {
      return new TypeToken<TemplateResource>(){}.getType();
    }
    
    if ("TemplateSMSResource".equalsIgnoreCase(className)) {
      return new TypeToken<TemplateSMSResource>(){}.getType();
    }
    
    if ("TierResource".equalsIgnoreCase(className)) {
      return new TypeToken<TierResource>(){}.getType();
    }
    
    if ("Timezone".equalsIgnoreCase(className)) {
      return new TypeToken<Timezone>(){}.getType();
    }
    
    if ("TokenDetailsResource".equalsIgnoreCase(className)) {
      return new TypeToken<TokenDetailsResource>(){}.getType();
    }
    
    if ("TransactionResource".equalsIgnoreCase(className)) {
      return new TypeToken<TransactionResource>(){}.getType();
    }
    
    if ("UsageInfo".equalsIgnoreCase(className)) {
      return new TypeToken<UsageInfo>(){}.getType();
    }
    
    if ("User".equalsIgnoreCase(className)) {
      return new TypeToken<User>(){}.getType();
    }
    
    if ("UserAchievementGroupResource".equalsIgnoreCase(className)) {
      return new TypeToken<UserAchievementGroupResource>(){}.getType();
    }
    
    if ("UserAchievementResource".equalsIgnoreCase(className)) {
      return new TypeToken<UserAchievementResource>(){}.getType();
    }
    
    if ("UserActionLog".equalsIgnoreCase(className)) {
      return new TypeToken<UserActionLog>(){}.getType();
    }
    
    if ("UserActivityResultsResource".equalsIgnoreCase(className)) {
      return new TypeToken<UserActivityResultsResource>(){}.getType();
    }
    
    if ("UserBaseResource".equalsIgnoreCase(className)) {
      return new TypeToken<UserBaseResource>(){}.getType();
    }
    
    if ("UserInventoryAddRequest".equalsIgnoreCase(className)) {
      return new TypeToken<UserInventoryAddRequest>(){}.getType();
    }
    
    if ("UserInventoryResource".equalsIgnoreCase(className)) {
      return new TypeToken<UserInventoryResource>(){}.getType();
    }
    
    if ("UserItemLogResource".equalsIgnoreCase(className)) {
      return new TypeToken<UserItemLogResource>(){}.getType();
    }
    
    if ("UserLevelingResource".equalsIgnoreCase(className)) {
      return new TypeToken<UserLevelingResource>(){}.getType();
    }
    
    if ("UserRelationship".equalsIgnoreCase(className)) {
      return new TypeToken<UserRelationship>(){}.getType();
    }
    
    if ("UserRelationshipReferenceResource".equalsIgnoreCase(className)) {
      return new TypeToken<UserRelationshipReferenceResource>(){}.getType();
    }
    
    if ("UserRelationshipResource".equalsIgnoreCase(className)) {
      return new TypeToken<UserRelationshipResource>(){}.getType();
    }
    
    if ("UserResource".equalsIgnoreCase(className)) {
      return new TypeToken<UserResource>(){}.getType();
    }
    
    if ("UserTag".equalsIgnoreCase(className)) {
      return new TypeToken<UserTag>(){}.getType();
    }
    
    if ("VariableTypeResource".equalsIgnoreCase(className)) {
      return new TypeToken<VariableTypeResource>(){}.getType();
    }
    
    if ("VendorResource".equalsIgnoreCase(className)) {
      return new TypeToken<VendorResource>(){}.getType();
    }
    
    if ("Video".equalsIgnoreCase(className)) {
      return new TypeToken<Video>(){}.getType();
    }
    
    if ("VideoContribution".equalsIgnoreCase(className)) {
      return new TypeToken<VideoContribution>(){}.getType();
    }
    
    if ("VideoRelationshipResource".equalsIgnoreCase(className)) {
      return new TypeToken<VideoRelationshipResource>(){}.getType();
    }
    
    if ("VideoResource".equalsIgnoreCase(className)) {
      return new TypeToken<VideoResource>(){}.getType();
    }
    
    if ("VideoTag".equalsIgnoreCase(className)) {
      return new TypeToken<VideoTag>(){}.getType();
    }
    
    if ("WalletAlterRequest".equalsIgnoreCase(className)) {
      return new TypeToken<WalletAlterRequest>(){}.getType();
    }
    
    if ("WalletTotalResponse".equalsIgnoreCase(className)) {
      return new TypeToken<WalletTotalResponse>(){}.getType();
    }
    
    if ("WalletTransactionResource".equalsIgnoreCase(className)) {
      return new TypeToken<WalletTransactionResource>(){}.getType();
    }
    
    if ("XsollaPaymentRequest".equalsIgnoreCase(className)) {
      return new TypeToken<XsollaPaymentRequest>(){}.getType();
    }
    
    return new TypeToken<Object>(){}.getType();
  }

};
