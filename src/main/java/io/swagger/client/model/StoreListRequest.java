/**
 * Knetik Platform API Documentation Latest
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://demo.sandbox.knetikcloud.com
 *
 * OpenAPI spec version: Latest
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class StoreListRequest {
  
  @SerializedName("ignore_location")
  private Boolean ignoreLocation = null;
  @SerializedName("in_stock_only")
  private Boolean inStockOnly = null;
  @SerializedName("limit")
  private Integer limit = null;
  @SerializedName("page")
  private Integer page = null;
  @SerializedName("use_catalog")
  private Boolean useCatalog = null;

  /**
   * Whether the location is ignored
   **/
  @ApiModelProperty(value = "Whether the location is ignored")
  public Boolean getIgnoreLocation() {
    return ignoreLocation;
  }
  public void setIgnoreLocation(Boolean ignoreLocation) {
    this.ignoreLocation = ignoreLocation;
  }

  /**
   * Whether the item is in stock
   **/
  @ApiModelProperty(value = "Whether the item is in stock")
  public Boolean getInStockOnly() {
    return inStockOnly;
  }
  public void setInStockOnly(Boolean inStockOnly) {
    this.inStockOnly = inStockOnly;
  }

  /**
   * The amount of items returned
   **/
  @ApiModelProperty(value = "The amount of items returned")
  public Integer getLimit() {
    return limit;
  }
  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  /**
   * The page of the request
   **/
  @ApiModelProperty(value = "The page of the request")
  public Integer getPage() {
    return page;
  }
  public void setPage(Integer page) {
    this.page = page;
  }

  /**
   * Whether the catalog is used
   **/
  @ApiModelProperty(value = "Whether the catalog is used")
  public Boolean getUseCatalog() {
    return useCatalog;
  }
  public void setUseCatalog(Boolean useCatalog) {
    this.useCatalog = useCatalog;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StoreListRequest storeListRequest = (StoreListRequest) o;
    return (this.ignoreLocation == null ? storeListRequest.ignoreLocation == null : this.ignoreLocation.equals(storeListRequest.ignoreLocation)) &&
        (this.inStockOnly == null ? storeListRequest.inStockOnly == null : this.inStockOnly.equals(storeListRequest.inStockOnly)) &&
        (this.limit == null ? storeListRequest.limit == null : this.limit.equals(storeListRequest.limit)) &&
        (this.page == null ? storeListRequest.page == null : this.page.equals(storeListRequest.page)) &&
        (this.useCatalog == null ? storeListRequest.useCatalog == null : this.useCatalog.equals(storeListRequest.useCatalog));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.ignoreLocation == null ? 0: this.ignoreLocation.hashCode());
    result = 31 * result + (this.inStockOnly == null ? 0: this.inStockOnly.hashCode());
    result = 31 * result + (this.limit == null ? 0: this.limit.hashCode());
    result = 31 * result + (this.page == null ? 0: this.page.hashCode());
    result = 31 * result + (this.useCatalog == null ? 0: this.useCatalog.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class StoreListRequest {\n");
    
    sb.append("  ignoreLocation: ").append(ignoreLocation).append("\n");
    sb.append("  inStockOnly: ").append(inStockOnly).append("\n");
    sb.append("  limit: ").append(limit).append("\n");
    sb.append("  page: ").append(page).append("\n");
    sb.append("  useCatalog: ").append(useCatalog).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
