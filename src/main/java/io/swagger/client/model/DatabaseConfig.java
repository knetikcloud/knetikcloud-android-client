/**
 * Knetik Platform API Documentation Latest
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://demo.sandbox.knetikcloud.com
 *
 * OpenAPI spec version: Latest
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.MongoDatabaseConfig;
import io.swagger.client.model.SqlDatabaseConfig;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class DatabaseConfig {
  
  @SerializedName("mongo")
  private MongoDatabaseConfig mongo = null;
  @SerializedName("sql")
  private SqlDatabaseConfig sql = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public MongoDatabaseConfig getMongo() {
    return mongo;
  }
  public void setMongo(MongoDatabaseConfig mongo) {
    this.mongo = mongo;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public SqlDatabaseConfig getSql() {
    return sql;
  }
  public void setSql(SqlDatabaseConfig sql) {
    this.sql = sql;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DatabaseConfig databaseConfig = (DatabaseConfig) o;
    return (this.mongo == null ? databaseConfig.mongo == null : this.mongo.equals(databaseConfig.mongo)) &&
        (this.sql == null ? databaseConfig.sql == null : this.sql.equals(databaseConfig.sql));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.mongo == null ? 0: this.mongo.hashCode());
    result = 31 * result + (this.sql == null ? 0: this.sql.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class DatabaseConfig {\n");
    
    sb.append("  mongo: ").append(mongo).append("\n");
    sb.append("  sql: ").append(sql).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
