/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.ActivityEntitlementResource;
import io.swagger.client.model.RewardSetResource;
import io.swagger.client.model.SelectedSettingResource;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ChallengeActivityResource {
  
  @SerializedName("activity_id")
  private Long activityId = null;
  @SerializedName("challenge_id")
  private Long challengeId = null;
  @SerializedName("entitlement")
  private ActivityEntitlementResource entitlement = null;
  @SerializedName("id")
  private Long id = null;
  @SerializedName("reward_set")
  private RewardSetResource rewardSet = null;
  @SerializedName("settings")
  private List<SelectedSettingResource> settings = null;

  /**
   * The id of the activity
   **/
  @ApiModelProperty(required = true, value = "The id of the activity")
  public Long getActivityId() {
    return activityId;
  }
  public void setActivityId(Long activityId) {
    this.activityId = activityId;
  }

  /**
   * The id of the challenge
   **/
  @ApiModelProperty(value = "The id of the challenge")
  public Long getChallengeId() {
    return challengeId;
  }
  public void setChallengeId(Long challengeId) {
    this.challengeId = challengeId;
  }

  /**
   * The entitlement item needed to participate in the activity as part of this event. Null indicates free entry. When creating/updating only id is used. Item must be pre-existing
   **/
  @ApiModelProperty(value = "The entitlement item needed to participate in the activity as part of this event. Null indicates free entry. When creating/updating only id is used. Item must be pre-existing")
  public ActivityEntitlementResource getEntitlement() {
    return entitlement;
  }
  public void setEntitlement(ActivityEntitlementResource entitlement) {
    this.entitlement = entitlement;
  }

  /**
   * The unique ID for this resource
   **/
  @ApiModelProperty(value = "The unique ID for this resource")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }

  /**
   * The rewards to give at the end of each occurence of the activity. When creating/updating only id is used. Reward set must be pre-existing
   **/
  @ApiModelProperty(value = "The rewards to give at the end of each occurence of the activity. When creating/updating only id is used. Reward set must be pre-existing")
  public RewardSetResource getRewardSet() {
    return rewardSet;
  }
  public void setRewardSet(RewardSetResource rewardSet) {
    this.rewardSet = rewardSet;
  }

  /**
   * The list of settings and the select options
   **/
  @ApiModelProperty(value = "The list of settings and the select options")
  public List<SelectedSettingResource> getSettings() {
    return settings;
  }
  public void setSettings(List<SelectedSettingResource> settings) {
    this.settings = settings;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChallengeActivityResource challengeActivityResource = (ChallengeActivityResource) o;
    return (this.activityId == null ? challengeActivityResource.activityId == null : this.activityId.equals(challengeActivityResource.activityId)) &&
        (this.challengeId == null ? challengeActivityResource.challengeId == null : this.challengeId.equals(challengeActivityResource.challengeId)) &&
        (this.entitlement == null ? challengeActivityResource.entitlement == null : this.entitlement.equals(challengeActivityResource.entitlement)) &&
        (this.id == null ? challengeActivityResource.id == null : this.id.equals(challengeActivityResource.id)) &&
        (this.rewardSet == null ? challengeActivityResource.rewardSet == null : this.rewardSet.equals(challengeActivityResource.rewardSet)) &&
        (this.settings == null ? challengeActivityResource.settings == null : this.settings.equals(challengeActivityResource.settings));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.activityId == null ? 0: this.activityId.hashCode());
    result = 31 * result + (this.challengeId == null ? 0: this.challengeId.hashCode());
    result = 31 * result + (this.entitlement == null ? 0: this.entitlement.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.rewardSet == null ? 0: this.rewardSet.hashCode());
    result = 31 * result + (this.settings == null ? 0: this.settings.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChallengeActivityResource {\n");
    
    sb.append("  activityId: ").append(activityId).append("\n");
    sb.append("  challengeId: ").append(challengeId).append("\n");
    sb.append("  entitlement: ").append(entitlement).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  rewardSet: ").append(rewardSet).append("\n");
    sb.append("  settings: ").append(settings).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
