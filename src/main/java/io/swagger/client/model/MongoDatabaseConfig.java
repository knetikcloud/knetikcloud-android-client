/**
 * Knetik Platform API Documentation Latest
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: Latest
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class MongoDatabaseConfig {
  
  @SerializedName("db_name")
  private String dbName = null;
  @SerializedName("options")
  private String options = null;
  @SerializedName("password")
  private String password = null;
  @SerializedName("servers")
  private String servers = null;
  @SerializedName("username")
  private String username = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDbName() {
    return dbName;
  }
  public void setDbName(String dbName) {
    this.dbName = dbName;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getOptions() {
    return options;
  }
  public void setOptions(String options) {
    this.options = options;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getPassword() {
    return password;
  }
  public void setPassword(String password) {
    this.password = password;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getServers() {
    return servers;
  }
  public void setServers(String servers) {
    this.servers = servers;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getUsername() {
    return username;
  }
  public void setUsername(String username) {
    this.username = username;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MongoDatabaseConfig mongoDatabaseConfig = (MongoDatabaseConfig) o;
    return (this.dbName == null ? mongoDatabaseConfig.dbName == null : this.dbName.equals(mongoDatabaseConfig.dbName)) &&
        (this.options == null ? mongoDatabaseConfig.options == null : this.options.equals(mongoDatabaseConfig.options)) &&
        (this.password == null ? mongoDatabaseConfig.password == null : this.password.equals(mongoDatabaseConfig.password)) &&
        (this.servers == null ? mongoDatabaseConfig.servers == null : this.servers.equals(mongoDatabaseConfig.servers)) &&
        (this.username == null ? mongoDatabaseConfig.username == null : this.username.equals(mongoDatabaseConfig.username));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.dbName == null ? 0: this.dbName.hashCode());
    result = 31 * result + (this.options == null ? 0: this.options.hashCode());
    result = 31 * result + (this.password == null ? 0: this.password.hashCode());
    result = 31 * result + (this.servers == null ? 0: this.servers.hashCode());
    result = 31 * result + (this.username == null ? 0: this.username.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class MongoDatabaseConfig {\n");
    
    sb.append("  dbName: ").append(dbName).append("\n");
    sb.append("  options: ").append(options).append("\n");
    sb.append("  password: ").append(password).append("\n");
    sb.append("  servers: ").append(servers).append("\n");
    sb.append("  username: ").append(username).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
