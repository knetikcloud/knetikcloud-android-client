/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.knetikcloud.model;

import com.knetikcloud.model.FileGroupPropertyDefinitionResource;
import com.knetikcloud.model.PropertyFieldListResource;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class AudioGroupPropertyDefinitionResource extends FileGroupPropertyDefinitionResource {
  
  @SerializedName("field_list")
  private PropertyFieldListResource fieldList = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("required")
  private Boolean required = null;
  @SerializedName("type")
  private String type = null;
  @SerializedName("file_type")
  private String fileType = null;
  @SerializedName("max_count")
  private Integer maxCount = null;
  @SerializedName("max_file_size")
  private Long maxFileSize = null;
  @SerializedName("min_count")
  private Integer minCount = null;
  @SerializedName("max_length")
  private Integer maxLength = null;
  @SerializedName("min_length")
  private Integer minLength = null;

  /**
   * A list of the fields on both the property definition and property of this type
   **/
  @ApiModelProperty(value = "A list of the fields on both the property definition and property of this type")
  public PropertyFieldListResource getFieldList() {
    return fieldList;
  }
  public void setFieldList(PropertyFieldListResource fieldList) {
    this.fieldList = fieldList;
  }

  /**
   * The name of the property
   **/
  @ApiModelProperty(required = true, value = "The name of the property")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Whether the property is required
   **/
  @ApiModelProperty(required = true, value = "Whether the property is required")
  public Boolean getRequired() {
    return required;
  }
  public void setRequired(Boolean required) {
    this.required = required;
  }

  /**
   * The type of the property. Used for polymorphic type recognition and thus must match an expected type with additional properties.
   **/
  @ApiModelProperty(required = true, value = "The type of the property. Used for polymorphic type recognition and thus must match an expected type with additional properties.")
  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }

  /**
   * If provided, a file type that the property must match
   **/
  @ApiModelProperty(value = "If provided, a file type that the property must match")
  public String getFileType() {
    return fileType;
  }
  public void setFileType(String fileType) {
    this.fileType = fileType;
  }

  /**
   * If provided, the maximum number of files in the group
   **/
  @ApiModelProperty(value = "If provided, the maximum number of files in the group")
  public Integer getMaxCount() {
    return maxCount;
  }
  public void setMaxCount(Integer maxCount) {
    this.maxCount = maxCount;
  }

  /**
   * If provided, the maximum allowed size per file in bytes
   **/
  @ApiModelProperty(value = "If provided, the maximum allowed size per file in bytes")
  public Long getMaxFileSize() {
    return maxFileSize;
  }
  public void setMaxFileSize(Long maxFileSize) {
    this.maxFileSize = maxFileSize;
  }

  /**
   * If provided, the minimum number of files in the group
   **/
  @ApiModelProperty(value = "If provided, the minimum number of files in the group")
  public Integer getMinCount() {
    return minCount;
  }
  public void setMinCount(Integer minCount) {
    this.minCount = minCount;
  }

  /**
   * If provided, the maximum length of the audio
   **/
  @ApiModelProperty(value = "If provided, the maximum length of the audio")
  public Integer getMaxLength() {
    return maxLength;
  }
  public void setMaxLength(Integer maxLength) {
    this.maxLength = maxLength;
  }

  /**
   * If provided, the minimum length of the audio
   **/
  @ApiModelProperty(value = "If provided, the minimum length of the audio")
  public Integer getMinLength() {
    return minLength;
  }
  public void setMinLength(Integer minLength) {
    this.minLength = minLength;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AudioGroupPropertyDefinitionResource audioGroupPropertyDefinitionResource = (AudioGroupPropertyDefinitionResource) o;
    return (this.fieldList == null ? audioGroupPropertyDefinitionResource.fieldList == null : this.fieldList.equals(audioGroupPropertyDefinitionResource.fieldList)) &&
        (this.name == null ? audioGroupPropertyDefinitionResource.name == null : this.name.equals(audioGroupPropertyDefinitionResource.name)) &&
        (this.required == null ? audioGroupPropertyDefinitionResource.required == null : this.required.equals(audioGroupPropertyDefinitionResource.required)) &&
        (this.type == null ? audioGroupPropertyDefinitionResource.type == null : this.type.equals(audioGroupPropertyDefinitionResource.type)) &&
        (this.fileType == null ? audioGroupPropertyDefinitionResource.fileType == null : this.fileType.equals(audioGroupPropertyDefinitionResource.fileType)) &&
        (this.maxCount == null ? audioGroupPropertyDefinitionResource.maxCount == null : this.maxCount.equals(audioGroupPropertyDefinitionResource.maxCount)) &&
        (this.maxFileSize == null ? audioGroupPropertyDefinitionResource.maxFileSize == null : this.maxFileSize.equals(audioGroupPropertyDefinitionResource.maxFileSize)) &&
        (this.minCount == null ? audioGroupPropertyDefinitionResource.minCount == null : this.minCount.equals(audioGroupPropertyDefinitionResource.minCount)) &&
        (this.maxLength == null ? audioGroupPropertyDefinitionResource.maxLength == null : this.maxLength.equals(audioGroupPropertyDefinitionResource.maxLength)) &&
        (this.minLength == null ? audioGroupPropertyDefinitionResource.minLength == null : this.minLength.equals(audioGroupPropertyDefinitionResource.minLength));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.fieldList == null ? 0: this.fieldList.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.required == null ? 0: this.required.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.fileType == null ? 0: this.fileType.hashCode());
    result = 31 * result + (this.maxCount == null ? 0: this.maxCount.hashCode());
    result = 31 * result + (this.maxFileSize == null ? 0: this.maxFileSize.hashCode());
    result = 31 * result + (this.minCount == null ? 0: this.minCount.hashCode());
    result = 31 * result + (this.maxLength == null ? 0: this.maxLength.hashCode());
    result = 31 * result + (this.minLength == null ? 0: this.minLength.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class AudioGroupPropertyDefinitionResource {\n");
    sb.append("  " + super.toString()).append("\n");
    sb.append("  fieldList: ").append(fieldList).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  required: ").append(required).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  fileType: ").append(fileType).append("\n");
    sb.append("  maxCount: ").append(maxCount).append("\n");
    sb.append("  maxFileSize: ").append(maxFileSize).append("\n");
    sb.append("  minCount: ").append(minCount).append("\n");
    sb.append("  maxLength: ").append(maxLength).append("\n");
    sb.append("  minLength: ").append(minLength).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
