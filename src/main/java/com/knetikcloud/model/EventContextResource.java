/*
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.knetikcloud.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import com.knetikcloud.model.ExpressionResource;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import android.os.Parcelable;
import android.os.Parcel;

/**
 * EventContextResource
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-05-17T08:21:48.548-04:00")
public class EventContextResource implements Parcelable {
  @SerializedName("event_name")
  private String eventName = null;

  @SerializedName("parameters")
  private Map<String, ExpressionResource> parameters = new HashMap<String, ExpressionResource>();

  @SerializedName("type")
  private String type = null;

  public EventContextResource eventName(String eventName) {
    this.eventName = eventName;
    return this;
  }

   /**
   * Get eventName
   * @return eventName
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getEventName() {
    return eventName;
  }

  public void setEventName(String eventName) {
    this.eventName = eventName;
  }

  public EventContextResource parameters(Map<String, ExpressionResource> parameters) {
    this.parameters = parameters;
    return this;
  }

  public EventContextResource putParametersItem(String key, ExpressionResource parametersItem) {
    this.parameters.put(key, parametersItem);
    return this;
  }

   /**
   * Get parameters
   * @return parameters
  **/
  @ApiModelProperty(example = "null", value = "")
  public Map<String, ExpressionResource> getParameters() {
    return parameters;
  }

  public void setParameters(Map<String, ExpressionResource> parameters) {
    this.parameters = parameters;
  }

  public EventContextResource type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventContextResource eventContextResource = (EventContextResource) o;
    return Objects.equals(this.eventName, eventContextResource.eventName) &&
        Objects.equals(this.parameters, eventContextResource.parameters) &&
        Objects.equals(this.type, eventContextResource.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventName, parameters, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventContextResource {\n");
    
    sb.append("    eventName: ").append(toIndentedString(eventName)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
  public void writeToParcel(Parcel out, int flags) {
     
    out.writeValue(eventName);

    out.writeValue(parameters);

    out.writeValue(type);
  }

  public EventContextResource() {
    super();
  }

  EventContextResource(Parcel in) {
    
    eventName = (String)in.readValue(null);
    parameters = (Map<String, ExpressionResource>)in.readValue(ExpressionResource.class.getClassLoader());
    type = (String)in.readValue(null);
  }
  
  public int describeContents() {
    return 0;
  }

  public static final Parcelable.Creator<EventContextResource> CREATOR = new Parcelable.Creator<EventContextResource>() {
    public EventContextResource createFromParcel(Parcel in) {
      return new EventContextResource(in);
    }
    public EventContextResource[] newArray(int size) {
      return new EventContextResource[size];
    }
  };
}

