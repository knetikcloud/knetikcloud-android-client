/*
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.knetikcloud.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import android.os.Parcelable;
import android.os.Parcel;

/**
 * BroadcastableEvent
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-05-17T08:21:48.548-04:00")

public class BroadcastableEvent implements Parcelable {
  @SerializedName("client")
  private String client = null;

  @SerializedName("customer")
  private String customer = null;

  @SerializedName("do_not_broadcast")
  private Boolean doNotBroadcast = null;

  @SerializedName("section")
  private String section = null;

  @SerializedName("source")
  private Object source = null;

  @SerializedName("specifics")
  private String specifics = null;

  @SerializedName("synchronous")
  private Boolean synchronous = null;

  @SerializedName("timestamp")
  private Long timestamp = null;

  @SerializedName("type")
  private String type = null;

  public BroadcastableEvent client(String client) {
    this.client = client;
    return this;
  }

   /**
   * Get client
   * @return client
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getClient() {
    return client;
  }

  public void setClient(String client) {
    this.client = client;
  }

  public BroadcastableEvent customer(String customer) {
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getCustomer() {
    return customer;
  }

  public void setCustomer(String customer) {
    this.customer = customer;
  }

  public BroadcastableEvent doNotBroadcast(Boolean doNotBroadcast) {
    this.doNotBroadcast = doNotBroadcast;
    return this;
  }

   /**
   * Get doNotBroadcast
   * @return doNotBroadcast
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getDoNotBroadcast() {
    return doNotBroadcast;
  }

  public void setDoNotBroadcast(Boolean doNotBroadcast) {
    this.doNotBroadcast = doNotBroadcast;
  }

  public BroadcastableEvent section(String section) {
    this.section = section;
    return this;
  }

   /**
   * Get section
   * @return section
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getSection() {
    return section;
  }

  public void setSection(String section) {
    this.section = section;
  }

  public BroadcastableEvent source(Object source) {
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @ApiModelProperty(example = "null", value = "")
  public Object getSource() {
    return source;
  }

  public void setSource(Object source) {
    this.source = source;
  }

  public BroadcastableEvent specifics(String specifics) {
    this.specifics = specifics;
    return this;
  }

   /**
   * Get specifics
   * @return specifics
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getSpecifics() {
    return specifics;
  }

  public void setSpecifics(String specifics) {
    this.specifics = specifics;
  }

  public BroadcastableEvent synchronous(Boolean synchronous) {
    this.synchronous = synchronous;
    return this;
  }

   /**
   * Get synchronous
   * @return synchronous
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getSynchronous() {
    return synchronous;
  }

  public void setSynchronous(Boolean synchronous) {
    this.synchronous = synchronous;
  }

  public BroadcastableEvent timestamp(Long timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(Long timestamp) {
    this.timestamp = timestamp;
  }

  public BroadcastableEvent type(String type) {
    this.type = type;
    return this;
  }

   /**
   * The type of the event. Used for polymorphic type recognition and thus must match an expected type
   * @return type
  **/
  @ApiModelProperty(example = "null", required = true, value = "The type of the event. Used for polymorphic type recognition and thus must match an expected type")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BroadcastableEvent broadcastableEvent = (BroadcastableEvent) o;
    return Objects.equals(this.client, broadcastableEvent.client) &&
        Objects.equals(this.customer, broadcastableEvent.customer) &&
        Objects.equals(this.doNotBroadcast, broadcastableEvent.doNotBroadcast) &&
        Objects.equals(this.section, broadcastableEvent.section) &&
        Objects.equals(this.source, broadcastableEvent.source) &&
        Objects.equals(this.specifics, broadcastableEvent.specifics) &&
        Objects.equals(this.synchronous, broadcastableEvent.synchronous) &&
        Objects.equals(this.timestamp, broadcastableEvent.timestamp) &&
        Objects.equals(this.type, broadcastableEvent.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(client, customer, doNotBroadcast, section, source, specifics, synchronous, timestamp, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BroadcastableEvent {\n");
    
    sb.append("    client: ").append(toIndentedString(client)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    doNotBroadcast: ").append(toIndentedString(doNotBroadcast)).append("\n");
    sb.append("    section: ").append(toIndentedString(section)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    specifics: ").append(toIndentedString(specifics)).append("\n");
    sb.append("    synchronous: ").append(toIndentedString(synchronous)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
  public void writeToParcel(Parcel out, int flags) {
     
    out.writeValue(client);

    out.writeValue(customer);

    out.writeValue(doNotBroadcast);

    out.writeValue(section);

    out.writeValue(source);

    out.writeValue(specifics);

    out.writeValue(synchronous);

    out.writeValue(timestamp);

    out.writeValue(type);
  }

  public BroadcastableEvent() {
    super();
  }

  BroadcastableEvent(Parcel in) {
    
    client = (String)in.readValue(null);
    customer = (String)in.readValue(null);
    doNotBroadcast = (Boolean)in.readValue(null);
    section = (String)in.readValue(null);
    source = (Object)in.readValue(null);
    specifics = (String)in.readValue(null);
    synchronous = (Boolean)in.readValue(null);
    timestamp = (Long)in.readValue(null);
    type = (String)in.readValue(null);
  }
  
  public int describeContents() {
    return 0;
  }

  public static final Parcelable.Creator<BroadcastableEvent> CREATOR = new Parcelable.Creator<BroadcastableEvent>() {
    public BroadcastableEvent createFromParcel(Parcel in) {
      return new BroadcastableEvent(in);
    }
    public BroadcastableEvent[] newArray(int size) {
      return new BroadcastableEvent[size];
    }
  };
}

